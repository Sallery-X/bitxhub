(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{352:function(t,s,a){"use strict";a.r(s);var n=a(43),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"bitxhub-v1-0-0-规范化部署文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bitxhub-v1-0-0-规范化部署文档"}},[t._v("#")]),t._v(" BitXHub v1.0.0 规范化部署文档")]),t._v(" "),a("h1",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("本部署文档将介绍如何部署一个四节点的中继链，以及一条Fabric应用链和一条以太坊应用链。并对应两条应用链部署各自部署跨链网关，以及如何部署和调用跨链合约进行跨链转账操作。")]),t._v(" "),a("h2",{attrs:{id:"前提"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前提"}},[t._v("#")]),t._v(" 前提")]),t._v(" "),a("p",[t._v("本文默认是在在Linux机器上进行操作，有些基础的工具可能要在服务器上提前安装：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("git")])]),t._v(" "),a("li",[a("strong",[t._v("docker")]),t._v("（部署Fabric区块链的服务器需要）")])]),t._v(" "),a("h1",{attrs:{id:"部署流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署流程"}},[t._v("#")]),t._v(" 部署流程")]),t._v(" "),a("h2",{attrs:{id:"部署中继链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署中继链"}},[t._v("#")]),t._v(" 部署中继链")]),t._v(" "),a("h3",{attrs:{id:"_1-准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-准备"}},[t._v("#")]),t._v(" 1.准备")]),t._v(" "),a("p",[t._v("该文档将介绍如何部署一个拥有4个节点的BitXHub集群，操作步骤会较其他系统的部署稍繁琐一些，用户需要**分别登录到4台服务器（或者在一台服务器上设置不同端口)**上进行操作。")]),t._v(" "),a("p",[t._v("这里假设4台服务器的IP分别为"),a("code",[t._v("node1")]),t._v("、"),a("code",[t._v("node2")]),t._v("、"),a("code",[t._v("node3")]),t._v("和"),a("code",[t._v("node4")]),t._v("。操作用户都是"),a("code",[t._v("bitxhub")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_2-一键脚本部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-一键脚本部署"}},[t._v("#")]),t._v(" 2. 一键脚本部署")]),t._v(" "),a("p",[t._v("在bitxhub项目下，提供了一键部署的脚本，适合在有项目权限的情况下进行部署。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("bitxhub"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("scripts\n├── build\n├── certs\n├── cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── cross_compile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── deploy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── prepare"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── quick_start\n├── solo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n└── x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n")])])]),a("p",[t._v("进入bitxhub项目，运行下面的命令进行部署：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## -a 为服务器地址（需要有ssh登陆权限，服务器安装tmux窗口管理器）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## -n 为需要在服务器上部署的结点数量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## -r 是否需要重新编译项目，可设为true和false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## -u 服务器ssh用户名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## -p bitxhub部署相对路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## e.g. bash deploy.sh -a 40.125.161.213 -n 4 -r false -u root -p bitxhub")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" deploy.sh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("bitxhub_addr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("node_num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("if_recompile"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-u "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("build_path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h4",{attrs:{id:"插件化部署（可选）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件化部署（可选）"}},[t._v("#")]),t._v(" 插件化部署（可选）")]),t._v(" "),a("p",[t._v("进入plugins子目录，运行下面的命令进行编译共识算法插件：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## make raft编译共识算法")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" raft\n")])])]),a("p",[t._v("编译完成后，节点会根据bitxhub.toml文件中的order配置加载不同的共识算法。")]),t._v(" "),a("h3",{attrs:{id:"_3-规范化部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-规范化部署"}},[t._v("#")]),t._v(" 3. 规范化部署")]),t._v(" "),a("h4",{attrs:{id:"前言-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言-2"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("该文档将介绍如何部署一个拥有4个节点的BitXHub集群，操作步骤会较其他系统的部署稍繁琐一些，用户需要"),a("strong",[t._v("分别登录到4台服务器（或者在一台服务器上设置不同端口")]),t._v("上进行操作。")]),t._v(" "),a("p",[t._v("这里假设4台服务器的IP分别为"),a("code",[t._v("node1")]),t._v("、"),a("code",[t._v("node2")]),t._v("、"),a("code",[t._v("node3")]),t._v("和"),a("code",[t._v("node4")]),t._v("。操作用户都是"),a("code",[t._v("bitxhub")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"_3-1-获取安装包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-获取安装包"}},[t._v("#")]),t._v(" 3.1 获取安装包")]),t._v(" "),a("p",[t._v("从下面的命令下载获取BitXHub的 tar 包")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" bitxhub@node1\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在Mac环境下")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/meshplus/bitxhub/releases/download/v1.0.0-rc1/build_macos_x86_64_v1.0.0-rc1.tar.gz\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xvf build_macos_x86_64_v1.0.0-rc1.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在Linux环境下")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/meshplus/bitxhub/releases/download/v1.0.0-rc1/build_linux-amd64_v1.0.0-rc1.tar.gz\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xvf build_linux-amd64_v1.0.0-rc1.tar.gz\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bitxhub运行需要libwasmer.so动态链接库")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LD_LIBRARY_PATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LD_LIBRARY_PATH")]),t._v(":build/\n")])])]),a("p",[t._v("解压完成之后，会看到如下build目录")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n├── addresses\n├── agency"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cert\n├── agency"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("priv\n├── bitxhub\n├── ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cert\n├── ca"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("priv\n├── libwasmer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("so\n├── node1\n│   ├── "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("README")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md\n│   ├── api\n│   ├── bitxhub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── certs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n│   ├── genesis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n│   ├── network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── plugins\n│   └── start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── node2\n│   ├── "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("README")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md\n│   ├── api\n│   ├── bitxhub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── certs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n│   ├── genesis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n│   ├── network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── plugins\n│   └── start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── node3\n│   ├── "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("README")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md\n│   ├── api\n│   ├── bitxhub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── certs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n│   ├── genesis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n│   ├── network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── plugins\n│   └── start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── node4\n│   ├── "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("README")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md\n│   ├── api\n│   ├── bitxhub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── certs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n│   ├── genesis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n│   ├── network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toml\n│   ├── plugins\n│   └── start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sh\n├── pids\n├── raft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("so\n└── solo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("so\n")])])]),a("h4",{attrs:{id:"_3-2-修改配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-修改配置文件"}},[t._v("#")]),t._v(" 3.2 修改配置文件")]),t._v(" "),a("p",[t._v("下面以node1为例介绍如何修改配置文件")]),t._v(" "),a("p",[a("strong",[t._v("修改bitxhub.toml文件")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BitXHub configuration file"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否按照单结点模式启动BitXHub")]),t._v("\nsolo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# BitXHub提供服务的端口，确保和系统不冲突")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  grpc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60011")]),t._v("\n  gateway "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9091")]),t._v("\n  pprof "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("53121")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pprof"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 网关白名单")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("gateway"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    allowed_origins "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志输出相关设置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  level "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logs"')]),t._v("\n  filename "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bitxhub.log"')]),t._v("\n  report_caller "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("log.module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    p2p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),t._v("\n    consensus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),t._v("\n    executor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),t._v("\n    router "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),t._v("\n    api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),t._v("\n    coreapi "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"info"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("cert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  verify "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# BitXHub使用的共识算法，共识模块作为插件进行加载")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("order"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  plugin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins/raft.so"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# BitXHub启动的创世块信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("genesis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    addresses "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xe6f8c9cf6e38bd506fae93b73ee5e80cc8f73667"')]),t._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x8374bb1e41d4a4bb4ac465e74caa37d242825efc"')]),t._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x759801eab44c9a9bbc3e09cb7f1f85ac57298708"')]),t._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xf2d66e2c27e93ff083ee3999acb678a36bb349bb"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("p",[a("strong",[t._v("修改network.toml文件")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# BitXHub结点的IP和端口信息，BitXHub结点的id具有唯一性")]),t._v("\nN "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推荐在node1服务器上配置为id=1,其他node的服务器ID递增")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  addr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/127.0.0.1/tcp/4001/p2p/Qma1oh5JtrV24gfP9bFrVv4miGKz7AABpfJhZ4F2Z5ngmL"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  addr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/127.0.0.1/tcp/4002/p2p/QmTGbPAfCYiAYDwYytt3QQLn3fq79dzciyP9kTFYWr8Lqb"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  addr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/127.0.0.1/tcp/4003/p2p/QmNxNoU52ZmSaeFS9MEUHAvusp6iqoqZRKnpoKwUvHkVdB"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("nodes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  addr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/127.0.0.1/tcp/4004/p2p/QmaKBzZw94uqRRr5w8n4DMzrYcJ8V9VkyVYRxBSYYvi1te"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\n")])])]),a("p",[t._v("按照上面配置的注释相应的进行修改，其中需要注意的是：每个节点的 "),a("code",[t._v("addr")]),t._v(" 的最后一段ID需要进行修改。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" $ ./bitxhub-nodes/bitxhub key pid --path node1/certs/node.priv\n")])])]),a("p",[t._v("运行上面的命令会得到类似于 "),a("code",[t._v("QmP62PJJBSZCYLDdfFEraxG4pACAR2k83JEDY59zsM4HD2")]),t._v(" 的一个ID，将此ID替换 "),a("code",[t._v("network.toml")]),t._v(" 中 "),a("code",[t._v("node1")]),t._v(" 的 "),a("code",[t._v("addr")]),t._v(" 后缀即可，比如：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("addr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/127.0.0.1/tcp/4001/p2p/Qma1oh5JtrV24gfP9bFrVv4miGKz7AABpfJhZ4F2Z5ngmL"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 修改为\naddr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/127.0.0.1/tcp/4001/p2p/QmP62PJJBSZCYLDdfFEraxG4pACAR2k83JEDY59zsM4HD2"')]),t._v("\n")])])]),a("p",[t._v("其他节点同理进行修改即可。")]),t._v(" "),a("p",[a("strong",[t._v("修改order.toml")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("# 共识算法插件的配置文件\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("raft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nelection_tick               "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" # ElectionTick is the number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tick invocations that must pass between elections"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nheartbeat_tick              "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" # HeartbeatTick is the number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Tick invocations that must pass between heartbeats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nmax_size_per_msg            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1048576")]),t._v(" # "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MaxSizePerMsg limits the max size "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" each append message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nmax_inflight_msgs           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" # MaxInflightMsgs limits the max number "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flight append messages during optimistic replication phase"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\ncheck_quorum                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" # Leader steps down when quorum is not active "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" an electionTimeout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\npre_vote                    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" # PreVote prevents reconnected node "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" disturbing network"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\ndisable_proposal_forwarding "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" # This prevents blocks "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" being accidentally proposed by followers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("raft"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tx_pool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        pack_size           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" # How many transactions should the primary pack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        pool_size           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50000")]),t._v(" # How many transactions could the txPool stores "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        block_tick          "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"500ms"')]),t._v(" # Block packaging time period"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),a("h4",{attrs:{id:"_3-3-启动bitxhub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-启动bitxhub"}},[t._v("#")]),t._v(" 3.3 启动BitXHub")]),t._v(" "),a("p",[t._v("将bitxhub和raft.so二进制放到各自的node目录下，再执行下面的命令")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ~/build/bitxhub ~/build/node/\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ~/build/raft.so ~/build/node/plugins/\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v(" start.sh\n")])])]),a("p",[t._v("等待BitXHub进行共识，打印出BitXHub标志后即部署成功。")]),t._v(" "),a("h2",{attrs:{id:"部署fabric和跨链合约"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署fabric和跨链合约"}},[t._v("#")]),t._v(" 部署Fabric和跨链合约")]),t._v(" "),a("h3",{attrs:{id:"_1-部署fabric"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-部署fabric"}},[t._v("#")]),t._v(" 1. 部署Fabric")]),t._v(" "),a("p",[t._v("按照Fabric"),a("a",{attrs:{href:"https://hyperledger-fabric.readthedocs.io/en/release-1.4/build_network.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("启动一条默认配置的Fabric 1.4.3版本的区块链即可。")]),t._v(" "),a("p",[t._v("在你的机器上启动Fabric 1.4.3 的应用链之后，会得到一个crypto-config的文件夹，这个文件夹在后面跨链网关的部署流程中会用到。")]),t._v(" "),a("h3",{attrs:{id:"_2-部署-chaincode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-部署-chaincode"}},[t._v("#")]),t._v(" 2. 部署 chaincode")]),t._v(" "),a("p",[t._v("要将Fabric接入跨链系统，需要在Fabric上部署跨链合约。")]),t._v(" "),a("p",[t._v("下载chaincode跨链合约")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/meshplus/pier-client-fabric/raw/master/example/contracts.zip\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unzip")]),t._v(" contract.zip\n")])])]),a("p",[t._v("我们提供的跨链合约提供了一个跨链管理合约 "),a("code",[t._v("broker")]),t._v(" 和两个样例应用合约 "),a("code",[t._v("transfer")]),t._v("和 "),a("code",[t._v("data_swapper")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("└── src\n    ├── broker\n    │   ├── broker.go\n    │   ├── data_swapper.go\n    │   ├── helper.go\n    │   ├── meta.go\n    │   └── transfer.go\n    ├── data_swapper\n    │   └── data_swapper.go\n    └── transfer\n        ├── helper.go\n        └── transfer.go\n")])])]),a("p",[t._v("将这几个合约部署到Fabric上即可，chaincode名称推荐使用对应的项目名不用改变。")]),t._v(" "),a("p",[a("strong",[t._v("broker合约对应用合约进行审核")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("broker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Broker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("audit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stub shim"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ChaincodeStubInterface"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" pb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Response "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tchannel "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tchaincodeName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\tstatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("调用broker合约中的 "),a("code",[t._v("audit")]),t._v(" 方法，参数是 fabric网络中channel名 + chaincode名称 + 1（数字1表示审核代码通过）")]),t._v(" "),a("h2",{attrs:{id:"部署以太坊和跨链合约"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署以太坊和跨链合约"}},[t._v("#")]),t._v(" 部署以太坊和跨链合约")]),t._v(" "),a("h3",{attrs:{id:"_1-部署以太坊私链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-部署以太坊私链"}},[t._v("#")]),t._v(" 1. 部署以太坊私链")]),t._v(" "),a("p",[t._v("使用以太坊私链只是为了演示跨链流程，建议使用Geth 客户端的Dev 模式进行启动，并且需要开启websocket端口和RPC端口。")]),t._v(" "),a("h3",{attrs:{id:"_2-部署solidity跨链合约"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-部署solidity跨链合约"}},[t._v("#")]),t._v(" 2. 部署Solidity跨链合约")]),t._v(" "),a("p",[t._v("下载Solidity跨链合约")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/meshplus/pier-client-ethereum.git\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" pier-client-ethereum/example\n")])])]),a("p",[t._v("我们提供的Solidity跨链合约提供了一个跨链管理合约 "),a("code",[t._v("broker")]),t._v(" 和两个样例应用合约 "),a("code",[t._v("transfer")]),t._v("和 "),a("code",[t._v("data_swapper")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n├── broker.sol\n├── data_swapper.sol\n└── transfer.sol\n")])])]),a("p",[t._v("部署合约的先后顺序需要注意，需要首先部署 "),a("code",[t._v("broker")]),t._v(" 合约，得到它的地址比如是 "),a("code",[t._v("0xD3880ea40670eD51C3e3C0ea089fDbDc9e3FBBb4")])]),t._v(" "),a("p",[t._v("再修改 "),a("code",[t._v("data_swapper")]),t._v(" 和 "),a("code",[t._v("transfer")]),t._v(" 代码中的 "),a("code",[t._v("broker")]),t._v(" 地址，以 "),a("code",[t._v("data_swapper")]),t._v(" 为例说明如何修改：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("contract DataSwapper "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\taddress BrokerAddr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x2346f3BA3F0B6676aa711595daB8A27d0317DB57")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换为你部署broker得到的地址")]),t._v("\n\tBroker broker "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Broker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BrokerAddr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("才能进行 "),a("code",[t._v("data_swapper")]),t._v(" 和 "),a("code",[t._v("transfer")]),t._v(" 的部署操作。")]),t._v(" "),a("p",[a("strong",[t._v("broker合约对应用合约进行审核")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("audit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("address addr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int64 status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("returns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("调用broker合约中的 "),a("code",[t._v("audit")]),t._v(" 方法，参数是之前部署得到的 "),a("code",[t._v("transfer")]),t._v(" 或者 "),a("code",[t._v("data_swapper")]),t._v(" 合约地址 + 1（数字1表示审核代码通过）")]),t._v(" "),a("h2",{attrs:{id:"启动跨链网关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动跨链网关"}},[t._v("#")]),t._v(" 启动跨链网关")]),t._v(" "),a("h3",{attrs:{id:"_1-获取安装包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-获取安装包"}},[t._v("#")]),t._v(" 1. 获取安装包")]),t._v(" "),a("p",[t._v("从下面的链接获取跨链网关的二进制安装包并进行安装：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在Mac环境下")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/meshplus/pier/releases/download/v1.0.0-rc1/pier-macos-x86-64.tar.gz\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" pier-binary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xvf pier-macos-x86-64.tar.gz -C pier-binary\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在Linux环境下")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://github.com/meshplus/pier/releases/download/v1.0.0-rc1/pier-linux-amd64.tar.gz\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" pier-binary "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" xvf pier-linux-amd64.tar.gz -C pier-binary\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pier运行需要libwasmer.so动态链接库")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://raw.githubusercontent.com/meshplus/bitxhub/master/build/libwasmer.so -O pier-binary/libwasmer.so\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("LD_LIBRARY_PATH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$LD_LIBRARY_PATH")]),t._v(":pier-binary/\n")])])]),a("p",[t._v("解压后可以看到下面的文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("- pier-binary\n├── eth-client.so\n├── fabric1.4-client.so\n├── pier\n")])])]),a("p",[t._v("eth-client.so 和 fabric1.4-client.so分别用于以太坊和Fabric的跨链网关的启动。")]),t._v(" "),a("p",[t._v("并将 "),a("code",[t._v("pier")]),t._v(" 放到环境变量目录下")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" pier-binary/pier /usr/local/bin/\n")])])]),a("h3",{attrs:{id:"_2-跨链网关配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-跨链网关配置"}},[t._v("#")]),t._v(" 2. 跨链网关配置")]),t._v(" "),a("p",[t._v("Pier 需要配置中继链和应用链的相关信息，可以指定配置目录，默认路径为 "),a("code",[t._v("$HOME/.pier")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fabric 应用链初始化为$HOME/.pier1，以太坊应用链初始化为$HOME/.pier2，区分开即可")]),t._v("\n$ pier --repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1 init\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看具体的配置内容")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/pier.toml\n")])])]),a("p",[t._v("主要需要修改的部分是端口信息、中继链的信息、应用链的信息")]),t._v(" "),a("ul",[a("li",[t._v("修改端口信息")])]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果不冲突的话，可以不用修改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("http")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44544")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("pprof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44555")]),t._v("\n")])])]),a("ul",[a("li",[t._v("修改中继链信息")])]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("bitxhub")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在服务器启动的bitxhub需要修改为服务器地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("addr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:60011"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改为BitXHub节点的地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("validators")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x000f1a7a08ccc48e5d30f80850cf1cf283aa3abd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xe93b92f1da08f925bdee44e91e7768380ae83307"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xb18c8575e3284e79b92100025a31378feb8100d6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0x856E2B9A5FA82FD1B031D1FF6863864DBAC7995D"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("ul",[a("li",[t._v("修改应用链信息")])]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("appchain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所连接的应用链对应的Plugin文件在跨链网关配置文件夹下的相对路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("plugin")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fabric-client-1.4.so"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所连接的应用链的配置文件夹在跨链网关配置文件夹下的相对路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("config")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fabric"')]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-fabric应用链插件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-fabric应用链插件配置"}},[t._v("#")]),t._v(" 3. Fabric应用链插件配置")]),t._v(" "),a("p",[t._v("插件配置的模板在"),a("code",[t._v("pier-client-fabric")]),t._v("项目中")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/plugins\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转到下载解压后的二进制文件夹")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ./pier-binary/fabric1.4-client.so "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/plugins/fabric-client-1.4.so\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转到pier-client-fabric项目路径下")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/meshplus/pier-client-fabric.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" pier-client-fabric\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ./config "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/fabric\n")])])]),a("p",[t._v("插件配置主要文件有")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("├── fabric\n│   ├── config.yaml\n|   └── crypto-config/\n│   └── fabric.toml\n│   └── fabric.validators\n")])])]),a("p",[t._v("主要修改Fabric网络配置，验证证书，跨链合约设置：")]),t._v(" "),a("ul",[a("li",[t._v("Fabric网络配置")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 复制你所部署的Fabric所产生的crypto-config文件夹")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -r /path/to/crypto-config "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/fabric/\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 复制Fabric上验证人证书")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/fabric/crypto-config/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/msp/signcerts/peer1.org2.example.com-cert.pem "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/fabric/fabric.validators\n")])])]),a("ul",[a("li",[t._v("修改 config.yaml 文件")])]),t._v(" "),a("p",[a("code",[t._v("config.yaml")]),t._v("文件记录的Fabric网络配置，需要使用绝对路径，把所有的路径都修改为 "),a("code",[t._v("crypto-config")]),t._v("文件夹所在的绝对路径。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("path: {CONFIG_PATH}/fabric/crypto-config => path: $HOME/.pier/fabric/crypto-config\n")])])]),a("p",[t._v("同时需要修改所有的Fabric 的IP地址，如：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("url: grpcs://localhost:7050 => url: grpcs://10.1.16.48:7050\n")])])]),a("ul",[a("li",[t._v("修改跨链合约相关配置")])]),t._v(" "),a("p",[t._v("修改 fabric.toml 文件")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("addr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:7053"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若Fabric部署在服务器上，该为服务器地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("event_filter")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"interchain-event-name"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("username")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Admin"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("ccid")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"broker"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若部署跨链broker合约名字不是broker需要修改")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("channel_id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mychannel"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("org")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"org2"')]),t._v("\n")])])]),a("h3",{attrs:{id:"_4-以太坊应用链插件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-以太坊应用链插件配置"}},[t._v("#")]),t._v(" 4. 以太坊应用链插件配置")]),t._v(" "),a("p",[t._v("插件配置的模板在"),a("code",[t._v("pier-client-ethereum")]),t._v("项目中")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier2/plugins\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转到下载解压后的二进制文件夹")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ./pier-binary/eth-client.so "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier2/plugins/eth-client.so\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转到pier-client-ethereum项目路径下")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/meshplus/pier-client-ethereum.git "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" pier-client-ethereum\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" ./config "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier2/ether\n")])])]),a("p",[t._v("插件配置主要文件有")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ether\n├── account.key\n├── broker.abi\n├── ether.validators\n├── ethereum.toml\n└── password\n")])])]),a("p",[t._v("主要修改以太坊的账号信息，跨链合约设置：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("账户配置")]),t._v(" "),a("p",[t._v("将你在以太坊私链上有足够余额的账号私钥文件替换 "),a("code",[t._v("account.key")]),t._v(" 文件，文件内容格式如下：")])])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"address"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"20f7fac801c5fc3f7e20cfbadaa1cdb33d818fa3"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"crypto"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cipher"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aes-128-ctr"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ciphertext"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8b60c0de32b4f06cc14932cdff70b3c01ecc21c25fcbfd0ad582f2bd19af7c30"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cipherparams"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"iv"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"29738398b8a2df14f74a81a4b547e3f6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kdf"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scrypt"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kdfparams"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dklen"')]),t._v(":32,"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"n"')]),t._v(":262144,"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"p"')]),t._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"r"')]),t._v(":8,"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"salt"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2a26869c26b03202cc3e7b136742ac3c1793675912aa33a8adab1b15749b0dcd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mac"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0a4a5234df68e7fe014e6c09c1c6de36c3be08081f713d39512bdf82c9a6500c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1f4f2381-aff1-40e0-9819-6c93f0645a6b"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),t._v(":3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("​\t如果你的账号有设置密码才能解冻账号，在password文件中写入密码即可")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# 填入你的密码\n123\n")])])]),a("ul",[a("li",[a("p",[t._v("修改 ethereum.toml 文件")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Ether")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 私链的IP地址和提供websocket服务的端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("addr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://localhost:8546"')]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义的应用链名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ether"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署在私链上的Broker合约地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("contract_address")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xD3880ea40670eD51C3e3C0ea089fDbDc9e3FBBb4"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Broker合约对应的ABI文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("abi_path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"broker.abi"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 有足够余额的账号秘钥文件名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("key_path")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"account.key"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 解冻该账户的密码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("password")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"password"')]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_5-启动跨链网关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-启动跨链网关"}},[t._v("#")]),t._v(" 5. 启动跨链网关")]),t._v(" "),a("p",[t._v("运行下面的命令：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 转到二进制下载解压目录并执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动Fabric的跨链网关")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先向中继链注册应用链，其中${APPCHAIN_NAME} 为自定义的名称，法律链等都可以")]),t._v("\npier --repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1 appchain register --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${APPCHAIN_NAME}")]),t._v(" --type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("fabric --validators"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/fabric/fabric.validators --desc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fabric appchain for test"')]),t._v(" --version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.4")]),t._v(".3\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向中继链注册验证规则")]),t._v("\npier --repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1 rule deploy --path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1/validating.wasm\n\n$ pier --repo "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier1 start \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动以太坊的跨链网关")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 先向中继链注册应用链，其中${APPCHAIN_NAME} 为自定义的名称，法律链等都可以")]),t._v("\npier --repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier2 appchain register --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${APPCHAIN_NAME}")]),t._v(" --type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ethereum --validators"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier2/ether/ether.validators --desc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ethereum appchain for test"')]),t._v(" --version"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.9")]),t._v(".3\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向中继链注册验证规则")]),t._v("\npier --repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier2 rule deploy --path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier2/validating.wasm\n\n$ pier --repo "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.pier2 start \n")])])]),a("p",[t._v("根据跨链网关打印的相应日志信息可以判断跨链网关的运行情况。")])])}),[],!1,null,null,null);s.default=e.exports}}]);